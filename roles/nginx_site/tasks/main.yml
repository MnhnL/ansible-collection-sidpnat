---

- name: Ensure extraction dir exists
  file:
    path: "/tmp/nginx_site/{{ nginx_site_name }}"
    state: directory
  when: nginx_site_archive_src is defined

- name: Install site htdocs to tmp
  unarchive:
    remote_src: yes
    src: "{{ nginx_site_archive_src }}"
    dest: "/tmp/nginx_site/{{ nginx_site_name }}"
  when: nginx_site_archive_src is defined

- name: Ensure site root exists
  file:
    path: "{{ nginx_site_install_root }}"
    state: directory
    group: www-data
    owner: www-data
  when: nginx_site_archive_src is defined

- name: Copy site htdocs to destination
  copy:
    remote_src: yes
    src: "/tmp/nginx_site/{{ nginx_site_name }}/{{ nginx_site_archive_subdir }}"
    dest: "{{ nginx_site_install_root }}"
  become_user: www-data
  when: nginx_site_archive_src is defined

- name: Install site file
  vars:
    default_server: "{{ nginx_site_default_server }}"
    root: "{{ nginx_site_root }}"
    server_name: "{{ nginx_site_server_names|join(' ') }}"
    index: "{{ nginx_site_index }}"
    main_location: "{{ nginx_site_main_location }}"
    upload_locations: "{{ nginx_site_upload_locations }}" # TODO: Put in all templates
    fourohfour_locations: "{{ nginx_site_404_locations }}"  # TODO: Put in all templates
    allow_locations: "{{ nginx_site_allow_locations }}" # TODO: Put in all templates
  when: nginx_site_state == 'enabled'
  block:
  - name: Install site file from template (static)
    template:
      src: site_static.j2
      dest: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    when: nginx_site_type == 'static'
  
  - name: Install site file from template (cgi)
    template:
      src: site_cgi.j2
      dest: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    vars:
      fastcgi_pass: "{{ nginx_site_fastcgi_pass }}"
      fastcgi_SCRIPT_FILENAME: "{{ nginx_site_fastcgi_SCRIPT_FILENAME }}"
      cgi_location: "{{ nginx_site_cgi_location }}"
    when: nginx_site_type == 'cgi'
  
  - name: Install site file from template (proxy)
    template:
      src: site_proxy.j2
      dest: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    vars:
      proxy_pass: "{{ nginx_site_proxy_pass }}"
      proxy_location: "{{ nginx_site_proxy_location }}"
      proxy_redirect_main_to: "{{ nginx_site_proxy_redirect_main_to }}"
    when: nginx_site_type == 'proxy'
  
  - name: Install site file from template (fastcgi)
    template:
      src: site_fastcgi.j2
      dest: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    vars:
      fastcgi_pass: "{{ nginx_site_fastcgi_pass }}"
      fastcgi_location: "{{ nginx_site_fastcgi_location }}"
    when: nginx_site_type == 'fastcgi'
  
- name: Uninstall site file from template
  file:
    dest: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    state: absent
  when: nginx_site_state == "disabled"

- name: Enable site
  file:
    src: "/etc/nginx/sites-available/{{ nginx_site_name }}"
    dest: "/etc/nginx/sites-enabled/{{ nginx_site_name }}"
    state: link
  when: nginx_site_state == "enabled"
  notify: 'Nginx reload'

- name: Disable site
  file:
    dest: "/etc/nginx/sites-enabled/{{ nginx_site_name }}"
    state: absent
  when: nginx_site_state == "disabled"
  notify: 'Nginx reload'

- name: Add hosts to nginx_site_https_hosts if necessary
  set_fact:
    nginx_site_https_hosts: '{{ nginx_site_https_hosts|default([]) }}'
  when: nginx_site_https

- name: Install https certificates
  include_role:
    name: mnhnl.sidpnat.certbot_nginx
  vars:
    domains: '{{ nginx_site_https_hosts }}'
    email: '{{ nginx_site_domain_contact_email }}'
  when: nginx_site_domain_contact_email is defined
  
