---

- name: Create Backup
  tags: ['backup', 'backup-create']
  block:
    - name: Stop tomcat if it's running
      service:
        name: tomcat9
        state: stopped

    - name: Check if ipt_data_dir is present, otherwise skip creating a backup
      stat:
        path: '{{ ipt_data_dir }}'
      register: stat_result
   
    - name: Create IPT data dir backup
      import_tasks: backup_create.yml
      when: stat_result.stat.exists

- name: Install IPT
  tags: ['update']
  block:
    - name: Set up apt sources to allow for ipt package to be installed (DANGER - this trusts them without signature)
      apt_repository:
        state: present
        filename: 99-ipt
        repo: 'deb [trusted=yes] https://apt.gbif.es/ bionic main'

    - name: install IPT
      apt:
        update_cache: yes
        name: 'ipt={{ ipt_version }}'
        state: present

- name: Restore Backup
  tags: ['backup', 'backup-restore']
  block:
    - name: Check if backup file is present, otherwise skip restoring
      stat:
        path: '{{ ipt_backup_file }}'
      register: stat_result

    - name: Restore backup if file available
      import_tasks: backup_restore.yml
      when: stat_result.stat.exists

- name: Install and activate compatible JRE
  block:
    - name: install old JRE (version 8)
      apt:
        name: openjdk-8-jre-headless
        state: present

    - name: make jre 8 the default jre alternative
      alternatives:
        name: java
        path: /usr/lib/jvm/java-8-openjdk-amd64/bin/java

    - name: remove new jdk
      apt:
        name: openjdk-11-jre-headless
        state: absent
        purge: yes

- name: Configure IPT <> tomcat
  block:
    - name: create data directory read/write/ex by tomcat user/group
      file:
        path: '{{ ipt_data_dir }}'
        state: directory
        owner: tomcat
        group: tomcat
        mode: u=rwx
      notify:
        - 'Configure ipt.properties'
        
    - name: Configure data directory
      lineinfile:
        path: /etc/tomcat9/Catalina/localhost/ipt.xml
        insertafter: '  <Resources allowLinking="true"/>'
        line: '  <Parameter name="IPT_DATA_DIR" value="{{ ipt_data_dir }}"/>'

    - name: Ensure tomcat systemd override dir exists
      file:
        path: /etc/systemd/system/tomcat9.service.d/
        state: directory

    - name: Reload systemd config to take previous change into account
      command: systemctl daemon-reload
      
    - name: Allow tomcat to read and write in data dir
      copy:
        src: files/override.conf
        dest: /etc/systemd/system/tomcat9.service.d/override.conf

- name: Configure IPT
  block:
    - name: put in development mode
      lineinfile:
        state: present
        create: yes
        path: '{{ ipt_data_dir }}/config/.gbifreg'
        line: '{{ ipt_mode }}'
    
    - name: configure raffael.mancini@mnhn.lu user if no user is present yet. Use password from vault vault_ipt_default_password.
      template:
        src: users.xml.j2
        dest: '{{ ipt_data_dir }}/config/users.xml'
        force: no
        owner: tomcat
        group: tomcat
      vars:
        password_crypted: '{{ ipt_default_user_password_crypted }}'
        user_email: '{{ ipt_default_user_email}}'
        user_firstname: '{{ ipt_default_user_firstname }}'
        user_lastname: '{{ ipt_default_user_lastname }}'

- name: Enable tomcat9
  service:
    name: tomcat9
    enabled: yes

- name: Install nginx site file
  tags: nginx
  import_role:
    name: mnhnl.sidpnat.nginx_site
  vars:
    nginx_site_type: proxy
    nginx_site_state: enabled
    nginx_site_name: ipt
    nginx_site_proxy_pass: 'http://localhost:8080/ipt'
    nginx_site_proxy_location: '/ipt'
    nginx_site_root: /var/lib/ipt # not really used
    nginx_site_server_names: [ "{{ ipt_domain }}" ]
    nginx_site_proxy_redirect_main_to: "https://{{ ipt_domain }}/ipt/"
    nginx_site_domain_contact_email: '{{ domain_contact_email }}'
  notify:
    - 'Configure ipt.properties'
    - 'Restart tomcat9'

- name: Configure Firewall
  block:
    - name: Allow http and https
      ufw:
        port: "{{ item }}"
        rule: allow
        proto: tcp
      loop:
        - http
        - https
