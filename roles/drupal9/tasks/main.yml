---

- name: Install dependencies for postgresql modules
  apt:
    name:
      - python3-psycopg2
      - postgresql-contrib # for pg_trgm
    state: present
  when: drupal9_db_engine == 'postgresql'

# - name: As postgres
#   become_user: postgres
#   when: drupal9_db_engine == 'postgresql'
#   block:
#     - name: Create postgres database user
#       postgresql_user:
#         name: drupal
#         password: '{{ drupal9_default_database_password }}'
#         state: present

#     - name: Create drupal9 postgres database
#       postgresql_db:
#         name: drupal
#         encoding: UTF-8
#         owner: drupal
#         state: present

# - name: As mariadb
#   when: drupal9_db_engine == 'mariadb'
#   block:
#     - name: Create mariadb database user
#       mysql_user:
#         name: drupal
#         password: '{{ drupal9_default_database_password }}'
#         state: present
#         login_password: '{{ drupal9_mariadb_root_password }}'
#         priv:
#           'drupal.*': 'ALL'

#     - name: Create mariadb database
#       mysql_db:
#         name: drupal
#         login_password: '{{ drupal9_mariadb_root_password }}'
#         state: present

- name: Create deployment directory
  file:
    path: '{{ drupal9_deploy_directory }}'
    state: directory
    owner: www-data
    group: www-data

- name: Install php dependencies
  apt:
    name:
      - php-xml # ext-dom
      - php-gd # ext-gd
      - php-mbstring
    state: present

- name: Install postgres php connector
  apt:
    name: php-pgsql
  when: drupal9_db_engine == 'postgresql'

- name: Install mariadb php connector
  apt:
    name: php-mysql
  when: drupal9_db_engine == 'mariadb'

- name: Check if drupal9 is already installed
  stat:
    path: '{{ drupal9_directory }}'
  register: drupal_dir

- name: Create drupal install directory
  file:
    path: '{{ drupal9_directory }}'
    state: directory
    owner: www-data
    group: www-data
  when: not drupal_dir.stat.exists

- name: As www-data install first time
  become_user: www-data
  when: not drupal_dir.stat.exists
  block:
    - name: Install drupal9 project using composer
      composer:
        command: create-project
        arguments: drupal/recommended-project drupal9
        working_dir: '{{ drupal9_deploy_directory }}'

    - name: Install drush (drupal shell)
      composer:
        command: require
        arguments: drush/drush
        working_dir: '{{ drupal9_directory }}'

    - name: Install drupal9 site
      command:
        cmd: '{{ drupal9_drush}} site:install -y --db-url=pgsql://drupal:{{ drupal9_default_database_password }}@localhost/drupal'
        chdir: '{{ drupal9_directory }}'
      when: drupal9_db_engine == 'postgresql'

    - name: Install drupal9 site
      command:
        cmd: '{{ drupal9_drush}} site:install -y --db-url=mysql://drupal:{{ drupal9_default_database_password }}@localhost/drupal'
        chdir: '{{ drupal9_directory }}'
      when: drupal9_db_engine == 'mariadb'
    
    - name: Set site name
      command:
        cmd: '{{ drupal9_drush }} config:set -y system.site name "{{ drupal9_site_name }}"'
        chdir: '{{ drupal9_directory }}'
    
    - name: Reset admin password
      command:
        cmd: '{{ drupal9_drush }} user:password -y admin "{{ drupal9_default_admin_password }}"'
        chdir: '{{ drupal9_directory }}'

    - name: Trusted host patterns (fixes some security issue)
      become_user: root
      lineinfile:
        regexp: "^$settings['trusted_host_patterns'] = "
        path: '{{ drupal9_directory }}/web/sites/default/settings.php'
        insertafter: EOF
        line: "$settings['trusted_host_patterns'] = ['^{{ drupal9_domain | regex_replace('\\.', '\\.') }}$' ];"

    - name: Create private files path
      file:
        dest: '{{ drupal9_directory }}/private'
        state: directory

    - name: Private files path
      become_user: root
      lineinfile:
        regexp: "^$settings['file_private_path'] = "
        path: '{{ drupal9_directory }}/web/sites/default/settings.php'
        insertafter: EOF
        line: "$settings['file_private_path'] = '{{ drupal9_directory }}/private';"

- name: Update drupal installation if it exists already
  when: drupal_dir.stat.exists
  block:
    - name: Update drupal9 using composer if already exists
      composer:
        command: update
        arguments: 'drupal/core "drupal/core-*" --with-all-dependencies'
        working_dir: '{{ drupal9_directory }}'

    - name: Update db (migrate)
      command:
        cmd: '{{ drupal9_drush}} updatedb'
        chdir: '{{ drupal9_directory }}'

    - name: Rebuild cache
      command:
        cmd: '{{ drupal9_drush}} cache:rebuild'
        chdir: '{{ drupal9_directory }}'

- name: Configure nginx to serve drupal9
  tags: always
  include_role:
    name: mnhnl.sidpnat.nginx_site
    apply:
      tags: drupal9_nginx
  vars:
    nginx_site_name: drupal9
    nginx_site_type: fastcgi
    nginx_site_index: index.html index.php
    nginx_site_root: '{{ drupal9_deploy_directory }}/drupal9/web'
    nginx_site_server_names: [ '{{ drupal9_domain }}' ]
    nginx_site_default_server: yes
    nginx_site_fastcgi_location: '~ \.php|^/update.php'
    nginx_site_fastcgi_pass: 'unix:/var/run/php/php-fpm.sock'
    nginx_site_https: yes
    nginx_site_https_hosts: [ '{{ drupal9_domain }}' ]
    nginx_site_domain_contact_email: '{{ domain_contact_email }}'
    nginx_site_404_locations:
      - '~* \.(txt|log)$'
      - '~ \..*/.*\.php$'
      - '~ ^/sites/.*/private/'
      - '~ ^/sites/[^/]+/files/.*\.php$'
      - '~ (^|/)\.'
      - '~ /vendor/.*\.php$'
      - '~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$'
    nginx_site_allow_locations:
      - '= /robots.txt'
      - '= /favicon.ico'
      - '~* ^/.well-known/'
    nginx_site_state: enabled

#   tags: nginx
#   template:
#     src: drupal9.j2
#     dest: /etc/nginx/sites-available/drupal9
#   vars:
#     root: '{{ drupal9_deploy_directory }}/drupal9/web'
#     host: '{{ drupal9_domain }}'
#     socket_path: '/var/run/php/php-fpm.sock'
#   notify:
#     'Reload nginx'

# - name: Activate site
#   tags: nginx
#   file:
#     src: /etc/nginx/sites-available/drupal9
#     dest: /etc/nginx/sites-enabled/drupal9
#     state: link
#   notify:
#     'Reload nginx'
